PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "migrations" ("id" integer not null primary key autoincrement, "migration" varchar not null, "batch" integer not null);
INSERT INTO migrations VALUES(27,'2022_01_01_000000_create_users_table',1);
INSERT INTO migrations VALUES(28,'2022_01_03_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(29,'2022_01_04_000000_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(30,'2022_01_05_000000_create_categories_table',1);
INSERT INTO migrations VALUES(31,'2022_01_06_000000_create_products_table',1);
INSERT INTO migrations VALUES(32,'2022_01_07_000000_create_product_images_table',1);
INSERT INTO migrations VALUES(33,'2022_01_08_000000_create_stocks_table',1);
INSERT INTO migrations VALUES(34,'2022_01_09_000000_create_favorites_table',1);
INSERT INTO migrations VALUES(35,'2022_01_10_000000_create_carts_table',1);
INSERT INTO migrations VALUES(36,'2022_01_11_000000_create_orders_table',1);
INSERT INTO migrations VALUES(37,'2022_01_12_000000_create_ordered_products_table',1);
INSERT INTO migrations VALUES(38,'2022_01_13_000000_create_addresses_table',1);
INSERT INTO migrations VALUES(39,'2022_01_14_000000_create_delivery_data_table',1);
CREATE TABLE IF NOT EXISTS "users" ("id" integer not null primary key autoincrement, "first_name" varchar not null, "last_name" varchar not null, "phone_number" varchar, "email" varchar not null, "password" varchar not null, "is_admin" tinyint(1) not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer not null primary key autoincrement, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime default CURRENT_TIMESTAMP not null);
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer not null primary key autoincrement, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "categories" ("id" integer not null primary key autoincrement, "name" varchar not null, "parent_category_id" integer, "image_url" varchar not null, "created_by" integer, "last_modified_by" integer, "created_at" datetime, "updated_at" datetime, foreign key("parent_category_id") references "categories"("id"), foreign key("created_by") references "users"("id"));
CREATE TABLE IF NOT EXISTS "products" ("id" integer not null primary key autoincrement, "is_deleted" tinyint(1) not null, "name" varchar not null, "description" varchar not null, "price" integer not null, "category_id" integer not null, "created_by" integer not null, "last_modified_by" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("category_id") references "categories"("id"), foreign key("created_by") references "users"("id"), foreign key("last_modified_by") references "users"("id"));
CREATE TABLE IF NOT EXISTS "product_images" ("id" integer not null primary key autoincrement, "image_url" varchar not null, "product_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "stocks" ("id" integer not null primary key autoincrement, "product_id" integer not null, "color" varchar not null, "size" varchar not null, "in_stock" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products"("id"));
CREATE TABLE IF NOT EXISTS "favorites" ("id" integer not null primary key autoincrement, "customer_id" integer not null, "product_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("customer_id") references "users"("id") on delete cascade, foreign key("product_id") references "products"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "carts" ("id" integer not null primary key autoincrement, "customer_id" integer not null, "stock_id" integer not null, "amount" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("customer_id") references "users"("id") on delete cascade, foreign key("stock_id") references "stocks"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "orders" ("id" integer not null primary key autoincrement, "public_id" varchar not null, "customer_id" integer not null, "customer_message" varchar, "status" varchar check ("status" in ('INCOMPLETE', 'PENDING', 'ACCEPTED', 'REJECTED', 'SENT', 'ARRIVED', 'CANCELED')) not null, "delivery_data_id" integer not null, "order_proccessed_at" datetime, "order_managed_by" integer, "created_at" datetime, "updated_at" datetime, foreign key("customer_id") references "users"("id"), foreign key("delivery_data_id") references "delivery_data"("id") on delete cascade, foreign key("order_managed_by") references "users"("id"));
CREATE TABLE IF NOT EXISTS "ordered_products" ("id" integer not null primary key autoincrement, "order_id" integer not null, "product_id" integer not null, "product_name" varchar not null, "product_description" varchar not null, "product_created_by" integer not null, "product_color" varchar not null, "product_size" varchar not null, "product_amount" integer not null, "product_price" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("order_id") references "orders"("id") on delete cascade, foreign key("product_id") references "products"("id"), foreign key("product_created_by") references "users"("id"));
CREATE TABLE IF NOT EXISTS "addresses" ("id" integer not null primary key autoincrement, "first_name" varchar not null, "last_name" varchar not null, "country" varchar not null, "city" varchar not null, "street_number" varchar not null, "zip_code" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "delivery_data" ("id" integer not null primary key autoincrement, "delivery_method" varchar, "payment_method" varchar, "delivery_cost" integer, "payment_cost" integer, "phone_number" varchar, "email" varchar not null, "delivery_address_id" integer, "billing_address_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("delivery_address_id") references "addresses"("id") on delete set null, foreign key("billing_address_id") references "addresses"("id") on delete set null);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('migrations',39);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE UNIQUE INDEX "stocks_product_id_color_size_unique" on "stocks" ("product_id", "color", "size");
CREATE UNIQUE INDEX "favorites_customer_id_product_id_unique" on "favorites" ("customer_id", "product_id");
CREATE UNIQUE INDEX "carts_customer_id_stock_id_unique" on "carts" ("customer_id", "stock_id");
CREATE UNIQUE INDEX "orders_public_id_unique" on "orders" ("public_id");
CREATE UNIQUE INDEX "orders_delivery_data_id_unique" on "orders" ("delivery_data_id");
CREATE UNIQUE INDEX "ordered_products_order_id_product_id_product_color_product_size_unique" on "ordered_products" ("order_id", "product_id", "product_color", "product_size");
CREATE UNIQUE INDEX "delivery_data_delivery_address_id_unique" on "delivery_data" ("delivery_address_id");
CREATE UNIQUE INDEX "delivery_data_billing_address_id_unique" on "delivery_data" ("billing_address_id");
COMMIT;
